(*scaffold.TemplateNode)({
  rootFS: (*fs.subFS)({
    fsys: (embed.FS) {
      files: (*[]embed.file)((len=5) {
        (embed.file) {
          name: (string) (len=9) "testdata/",
          data: (string) "",
          hash: ([16]uint8) (len=16) {
            00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
          }
        },
        (embed.file) {
          name: (string) (len=23) "testdata/dynamic_files/",
          data: (string) "",
          hash: ([16]uint8) (len=16) {
            00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
          }
        },
        (embed.file) {
          name: (string) (len=36) "testdata/dynamic_files/scaffold.yaml",
          data: (string) (len=12) "main: value\n",
          hash: ([16]uint8) (len=16) {
            00000000  27 34 01 30 91 7f 4a 63  e4 24 ee 2d 05 5b 7a 82  |'4.0..Jc.$.-.[z.|
          }
        },
        (embed.file) {
          name: (string) (len=38) "testdata/dynamic_files/{{ .Project }}/",
          data: (string) "",
          hash: ([16]uint8) (len=16) {
            00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
          }
        },
        (embed.file) {
          name: (string) (len=45) "testdata/dynamic_files/{{ .Project }}/main.go",
          data: (string) (len=55) "package main\n\nimport \"os\"\n\nfunc main() {\n\tos.Exit(0)\n}\n",
          hash: ([16]uint8) (len=16) {
            00000000  a8 94 ac e8 86 57 d1 8a  2c 72 ca 86 7a 11 21 6e  |.....W..,r..z.!n|
          }
        }
      })
    },
    dir: (string) (len=37) "testdata/dynamic_files/{{ .Project }}"
  }),
  folder: (bool) true,
  templatePath: (string) (len=1) ".",
  templateFile: (io.Reader) <nil>,
  outpath: (string) "",
  outContent: ([]uint8) <nil>,
  Children: ([]*scaffold.TemplateNode) (len=1) {
    (*scaffold.TemplateNode)({
      rootFS: (*fs.subFS)(<already shown>),
      folder: (bool) false,
      templatePath: (string) (len=7) "main.go",
      templateFile: (io.Reader) <nil>,
      outpath: (string) "",
      outContent: ([]uint8) <nil>,
      Children: ([]*scaffold.TemplateNode) {
      }
    })
  }
})
